<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="474" height="70"
	 horizontalScrollPolicy="off" verticalScrollPolicy="off" 
	 creationComplete="init()"
	 
	 
	xmlns:code="http://code.google.com/p/flexlib/" xmlns:controls="qs.controls.*" xmlns:ui="sss.Shelpers.Shelpers.ui.*">
	<mx:Script>
		<![CDATA[
			import sss.Shelpers.Shelpers.other.Tweener.TweenerTricks;
			import sss.Shelpers.Shelpers.other.TweenerHelpers;
			import sss.Shelpers.Shelpers.ShelpersConversions;
			import sss.Shelpers.Shelpers.other.Js;
			import sss.Shelpers.Shelpers.other.other.StringUtils;
			import sss2.JrlV4.vos.TweetVO;
			import sss2.JrlV4.JrlV4Model;
			import sss2.JrlV4.vos.CategoryVO;
			import mx.controls.listClasses.ListBase;
			import sss.Shelpers.Shelpers.ShelpersUI;
			import sss.Shelpers.Shelpers.FilterHelpers;
			import sss.Shelpers.Shelpers.ShelpersPopups;
			import sss.Shelpers.itemRenderers.SimpleClickEvent;
			import mx.events.ScrollEvent;
			import mx.controls.TextArea;
			import mx.collections.ArrayCollection;
			
			
			
			/*
			probably will be used by the the liead form ... 
			this syould feel like using a normal pogram..
			
			
			
			
			*/
			//public var model : JrlModel = JrlModel.getInstance();
			[Bindable] public var   category :       TweetVO = new TweetVO		
			// this override is essential for preventing random (un)checking when your DataGrid is scrolled
			override public function set data(value:Object):void
			{
				// not sure of the details on when or why, but sometimes this method is passed a null value
				//watchJrlBodyModelState
				if(value != null)
				{
					super.data = value;
					
					
 				//	this.callLater( this.updateNumber )
					this.category  = value as    TweetVO
					if ( this.creationComplete == false )
						return;
						
					this.modifyF() 
				 
				}
			}
 
			public function init() :void
			{
				//setWatchers()
				this.creationComplete = true
				var ee : ShelpersUI
				var were : FilterHelpers
				ShelpersUI.removeScrollbars( this )
				
				this.modifyF()
			}
			public var creationComplete : Boolean = false; 
  
		public function onRollOver() : void
		{
		}
		
		public function onRollOut() : void
		{
		}				
 
		
		public function modifyF()  : void
		{
			this.tweetTxt.text = this.category.text
			if ( this.model.recentSearch != null && this.model.recentSearch != '' ) 
			 	{
			 		var s : String =  StringUtils.boldSearchInResultTxt( this.model.recentSearch,  this.category.text  ) 			
			 		//s  = StringUtils.boldSearchInResultTxt( this.model.recentSearch,  this.category.text, '<b><font color="0xff000">', "</font></b>"  )
			 		this.tweetTxt.htmlText =s 	
			 		//this.tweetTxt.htmlText = '<b>asdf</b>Talkto'		
			 	}
			this.username.label = this.category.username
			this.avatarPic.source = this.category.avatar_url
			//this.timeTxt.text = '?'
			var index : int = this.parentDocument.dp.getItemIndex( this.category )
			
			if (   index != -1  ) 
				this.numberTxt.text = (	index+1)+ '.'
			
			if ( this.category.newT ) 
			{
				//Tweener
				ShelpersUI.FadeIn( this.newTxt )
			}
			else
			{
				this.newTxt.visible = false 
			}
			
			var ee : StringUtils 
			//EEE, MMM D, YYYY 
			var str : String = StringUtils.dateTimeFrom(	 this.category.date ,  'L:NN:SS A')  
			this.timeTxt.text = str 
			this.minteAgoTxt.text = ShelpersConversions.minutesAgo( this.category.date, '0 minutes ago' )
			
			this.stocksTxt.text = ''
			if ( this.category.stocks != '' ) 
			{
				this.stocksTxt.text = 'SYMBOLS: '+this.category.stocks
			}
			
			setTimeout( this.strobeAgain, Math.random()*1000 )
			var eee : TweenerTricks
			if ( this.category.newT == true ) 
				TweenerTricks.jumpUi( this.avatarPic ) 
			//this.strobeAgain();
		}
		
		[Bindable] public var model : JrlV4Model = JrlV4Model.getInstance();		
		public function onDelete( confirmed : Boolean = false) : void
		{
       		if ( confirmed == false ) 
       		{
       			this.model.popupConfirm.newConfirm_YesConfirmMode( 'Are you sure, all changes will be lost?', this.onDelete ) 
       			return; 
       		}			
			//this.model.myCategories.deleteLinkToObj( this.category, this.objDeleted ) 
		}
		
		public function objDeleted()  : void
		{
			
		}
		
		public function goToKLiknk()  : void
		{
			var ee : Js
			Js.goToUrl( 'http://twitter.com/'+this.category.username )
		}
		
		public function strobeAgain( )  : void
		{
			var trans : String = TweenerHelpers.BouceBack
			if ( this.category != null && this.category.newT )
			{ 
				TweenerHelpers.TProp( this.newTxt, 'alpha', .3, .5, .5 , trans)
				TweenerHelpers.TProp( this.newTxt, 'alpha', .8, .5, 0, trans )
				TweenerHelpers.TProp( this.avatarPic, 'alpha', .3, .5, .5, trans )
				TweenerHelpers.TProp( this.avatarPic, 'alpha', .8, .5, 0, trans )				
				//var ee : TweenerHelpers 
				setTimeout( this.strobeAgain, 1000 ) 
			}
			else
			{
				this.newTxt.alpha = 0; 
				this.avatarPic.alpha = 1; 
			}
		}
		]]>
	</mx:Script>
	<mx:Canvas  styleName="particalDec" height="70" width="30" >
		
	 
	
	</mx:Canvas>
	<mx:Label text="1." id="numberTxt"  x="7" y="22" width="24" color="0xFFFFFF"/>
	<mx:Canvas id="picHolder" height="50" width="50" x="42" y="9" horizontalScrollPolicy="off"  verticalScrollPolicy="off">
		 <controls:SuperImage id="avatarPic"  maxWidth="50" />
		 
 	</mx:Canvas>
<ui:TextArea2  text="Tweet"     id="tweetTxt" selectable="false"    y="2"  width="229" height="50" x="100"/>
	<ui:PlainLinkButton label="bywho?"  y="48"  id="username" 
		 paddingRight="0" paddingLeft="0"
		width="95" click="goToKLiknk()" styleName="linkBtn" x="348" textAlign="right"/>		
		<mx:Label text="Time Given" id="timeTxt"  x="375" y="0"/>
		<mx:Label text="Stocks" styleName="redTxt"   id="stocksTxt"  x="100" y="49"/>
		<mx:Label text="4 Minutes ago" id="minteAgoTxt"   x="343" y="22" width="100" textAlign="right"/>
		
		<mx:Label text="New"  id="newTxt" visible="{this.category.newT}"  styleName="redTxt"  x="303" y="52"/>
		<mx:VRule height="50"  x="337" y="10"/>
</mx:Canvas>